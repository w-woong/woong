// Code generated by MockGen. DO NOT EDIT.
// Source: ./appconfig_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	common "github.com/w-woong/common"
	entity "github.com/w-woong/woong/entity"
)

// MockAppConfigRepo is a mock of AppConfigRepo interface.
type MockAppConfigRepo struct {
	ctrl     *gomock.Controller
	recorder *MockAppConfigRepoMockRecorder
}

// MockAppConfigRepoMockRecorder is the mock recorder for MockAppConfigRepo.
type MockAppConfigRepoMockRecorder struct {
	mock *MockAppConfigRepo
}

// NewMockAppConfigRepo creates a new mock instance.
func NewMockAppConfigRepo(ctrl *gomock.Controller) *MockAppConfigRepo {
	mock := &MockAppConfigRepo{ctrl: ctrl}
	mock.recorder = &MockAppConfigRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppConfigRepo) EXPECT() *MockAppConfigRepoMockRecorder {
	return m.recorder
}

// CreateAppconfig mocks base method.
func (m *MockAppConfigRepo) CreateAppconfig(ctx context.Context, tx common.TxController, appConfig entity.AppConfig) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAppconfig", ctx, tx, appConfig)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAppconfig indicates an expected call of CreateAppconfig.
func (mr *MockAppConfigRepoMockRecorder) CreateAppconfig(ctx, tx, appConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAppconfig", reflect.TypeOf((*MockAppConfigRepo)(nil).CreateAppconfig), ctx, tx, appConfig)
}

// DeleteAppconfig mocks base method.
func (m *MockAppConfigRepo) DeleteAppconfig(ctx context.Context, tx common.TxController, id string) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAppconfig", ctx, tx, id)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteAppconfig indicates an expected call of DeleteAppconfig.
func (mr *MockAppConfigRepoMockRecorder) DeleteAppconfig(ctx, tx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAppconfig", reflect.TypeOf((*MockAppConfigRepo)(nil).DeleteAppconfig), ctx, tx, id)
}

// ReadAppconfigNoTx mocks base method.
func (m *MockAppConfigRepo) ReadAppconfigNoTx(ctx context.Context, id string) (entity.AppConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadAppconfigNoTx", ctx, id)
	ret0, _ := ret[0].(entity.AppConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadAppconfigNoTx indicates an expected call of ReadAppconfigNoTx.
func (mr *MockAppConfigRepoMockRecorder) ReadAppconfigNoTx(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadAppconfigNoTx", reflect.TypeOf((*MockAppConfigRepo)(nil).ReadAppconfigNoTx), ctx, id)
}

// UpdateAppconfig mocks base method.
func (m *MockAppConfigRepo) UpdateAppconfig(ctx context.Context, tx common.TxController, appConfig entity.AppConfig) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAppconfig", ctx, tx, appConfig)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateAppconfig indicates an expected call of UpdateAppconfig.
func (mr *MockAppConfigRepoMockRecorder) UpdateAppconfig(ctx, tx, appConfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAppconfig", reflect.TypeOf((*MockAppConfigRepo)(nil).UpdateAppconfig), ctx, tx, appConfig)
}
